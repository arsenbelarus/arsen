{"version":3,"sources":["hobbies/Hobbies.module.css","post/Post.module.css","hobbies/hobby/Hobby.module.css","common/mySelect/MySelect.module.css","common/myInput/MyInput.module.css","common/myButton/MyButton.module.css","MyComponents.module.css","common/myCheckbox/MyCheckbox.module.css","post/name/Name.module.css","post/message/Message.module.css","post/avatar/Avatar.module.css","post/Time/Time.module.css","post/avatar/avatar.jpg","common/myEditableSpan/MyEditableSpan.module.css","common/myRadio/MyRadio.module.css","post/name/Name.tsx","post/message/Message.tsx","post/avatar/Avatar.tsx","post/Time/Time.tsx","post/Post.tsx","hobbies/hobby/Hobby.tsx","hobbies/Hobbies.tsx","common/myInput/MyInput.tsx","common/myButton/MyButton.tsx","common/myCheckbox/MyCheckbox.tsx","MyComponents.tsx","PreJunior.tsx","JuniorPlus.tsx","common/myEditableSpan/MyEditableSpan.tsx","common/mySelect/MySelect.tsx","common/myRadio/MyRadio.tsx","Junior.tsx","App.tsx","serviceWorker.ts","state.ts","index.tsx"],"names":["module","exports","Name","props","className","s","fullName","name","Message","message","Avatar","avatarImage","src","alt","Time","time","Post","container","tableRow","tableCell","avatar","messageBlock","postName","postMessage","postTime","Hobby","hobby","priority","removeButton","onClick","removeHobby","id","Hobbies","useState","mydata","map","h","n","p","key","hobbies","setHobbies","filter","arrange","setArrange","arrangeHobbies","hobbiesContainer","buttonContainer","button","MyInput","restProps","value","title","setTitle","error","setError","addItem","trim","inputError","input","onKeyPress","e","charCode","onChange","currentTarget","onChangeTitle","autoFocus","onBlur","MyButton","isStandard","buttonRed","MyCheckbox","label","type","cssCheckbox","htmlFor","cssLabel","MyComponents","names","setNames","setName","inputContainer","nameValue","alert","newName","v1","newNames","span","length","PreJunior","JuniorPlus","MyEditableSpan","editMode","setEditMode","spanTitle","newValue","onDoubleClick","MySelect","select","options","option","index","selected","MyRadio","radio","checked","Junior","optionsArray","radioValues","setRadioValues","setSpanTitle","style","color","textAlign","fontSize","newRadioValues","App","to","activeClassName","path","render","Boolean","window","location","hostname","match","myData","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.b5307305.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hobbiesContainer\":\"Hobbies_hobbiesContainer__359k2\",\"buttonContainer\":\"Hobbies_buttonContainer__203fB\",\"button\":\"Hobbies_button__2ChiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Post_container__1RERZ\",\"tableRow\":\"Post_tableRow__2YEyL\",\"tableCell\":\"Post_tableCell__2rUkP\",\"messageBlock\":\"Post_messageBlock__2kNQk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hobby\":\"Hobby_hobby__2q4tn\",\"name\":\"Hobby_name__2XRCP\",\"priority\":\"Hobby_priority__3ExFW\",\"removeButton\":\"Hobby_removeButton__1c8RT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MySelect_container__pMN1c\",\"select\":\"MySelect_select__35X_P\",\"option\":\"MySelect_option__1Dy7z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MyInput_container__1lmkp\",\"input\":\"MyInput_input__CH0vf\",\"inputError\":\"MyInput_inputError__3Jwrp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"MyButton_button__3rTpF\",\"buttonRed\":\"MyButton_buttonRed__Y4Ar1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"MyComponents_inputContainer__3QDZY\",\"span\":\"MyComponents_span___yusq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cssCheckbox\":\"MyCheckbox_cssCheckbox__2RXKd\",\"cssLabel\":\"MyCheckbox_cssLabel__1ml3R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullName\":\"Name_fullName__1Y8Gl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__18Xis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarImage\":\"Avatar_avatarImage__1i82W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time\":\"Time_time__2dym9\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.b7c5e33e.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MyEditableSpan_container__2LMrZ\",\"input\":\"MyEditableSpan_input__EqedL\",\"buttonContainer\":\"MyEditableSpan_buttonContainer__mjdwe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MyRadio_container__1AjvJ\",\"select\":\"MyRadio_select__33Dj0\",\"option\":\"MyRadio_option__394wc\"};","import React from \"react\";\r\nimport s from './Name.module.css'\r\ntype propsName = {\r\n    name: string,\r\n}\r\nfunction Name(props: propsName) {\r\n    return (\r\n        <div className={s.fullName}>\r\n            {props.name}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Name;","import React from \"react\";\r\nimport s from './Message.module.css'\r\ntype propsMessage = {\r\n    message: string,\r\n}\r\nfunction Message(props: propsMessage) {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Avatar.module.css'\r\nimport avatar from './avatar.jpg'\r\ntype propsAvatar = {\r\n    src: string,\r\n    alt: string\r\n}\r\nfunction Avatar(props: propsAvatar) {\r\n    return (\r\n        <div className={s.avatarImage}>\r\n            <img src={props.src} alt={props.alt}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Avatar;","import React from \"react\";\r\nimport s from './Time.module.css'\r\ntype propsTime = {\r\n    time: string,\r\n}\r\nfunction Time(props: propsTime) {\r\n    return (\r\n        <div className={s.time}>\r\n            {props.time}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Time;","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport Name from \"./name/Name\";\r\nimport Message from './message/Message';\r\nimport Avatar from \"./avatar/Avatar\";\r\nimport Time from \"./Time/Time\";\r\nimport avatar from \"./avatar/avatar.jpg\";\r\n\r\ntype propsPost = {\r\n    postName: string,\r\n    postMessage: string,\r\n    postTime: string\r\n}\r\n\r\nfunction Post(props: propsPost) {\r\n    return (\r\n\r\n        <div className={s.container}>\r\n            <div className={s.tableRow}>\r\n                <div className={s.tableCell}>\r\n                    <Avatar src={avatar} alt={'avatar'}/>\r\n                    <div className={s.messageBlock}>\r\n                        <Name name={props.postName}/>\r\n                        <Message message={props.postMessage}/>\r\n                        <Time time={props.postTime}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './Hobby.module.css';\r\n\r\ntype propsType = {\r\n    name: string,\r\n    priority: string,\r\n    id: number,\r\n    key: number,\r\n    removeHobby: (id: number) => void,\r\n}\r\n\r\n\r\nfunction Hobby(props: propsType) {\r\n\r\n    return (\r\n        <div className={s.hobby}>\r\n            <div className={s.name}> {props.name} </div>\r\n            <div className={s.priority}> {props.priority} </div>\r\n            <div className={s.removeButton}> <button onClick={() => {props.removeHobby(props.id)}}> remove </button> </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hobby;","import React, {useState} from 'react';\r\nimport s from './Hobbies.module.css';\r\nimport Hobby from \"./hobby/Hobby\";\r\n\r\ntype propsType = {\r\n    mydata: Array<{ id: number, n: string, p: string }>,\r\n}\r\n\r\ntype HobbiesPropertyValues = \"all\" | \"high\" | \"middle\" | \"low\";\r\n\r\nfunction Hobbies(props: propsType) {\r\n\r\n    let [hobbies, setHobbies] = useState(props.mydata.map((h: { id: number, n: string, p: string }) =>\r\n        <Hobby name={h.n} priority={h.p} id={h.id} key={h.id} removeHobby={removeHobby}/>));\r\n\r\n    function removeHobby(id: number) {\r\n        hobbies = hobbies.filter(h => h.props.id !== id);\r\n        setHobbies(hobbies);\r\n    }\r\n\r\n    let [arrange, setArrange] = useState<HobbiesPropertyValues>(\"all\")\r\n\r\n    function arrangeHobbies(p: HobbiesPropertyValues) {\r\n        setArrange (p);\r\n    }\r\n\r\n    if (arrange === \"high\") {\r\n            hobbies = hobbies.filter(h => h.props.priority === \"high\")\r\n        } else if (arrange === \"middle\") {\r\n            hobbies = hobbies.filter(h => h.props.priority === \"middle\")\r\n        } else if (arrange === \"low\") {\r\n            hobbies = hobbies.filter(h => h.props.priority === \"low\")\r\n        } else if (arrange === \"all\") {\r\n        hobbies = hobbies\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.hobbiesContainer}>\r\n                {hobbies}\r\n            </div>\r\n            <div className={s.buttonContainer}>\r\n                <h2>Arrange by priorities</h2>\r\n                <button onClick={() => {arrangeHobbies (\"high\")}} className={s.button}> HIGH </button>\r\n                <button onClick={() => {arrangeHobbies (\"middle\")}} className={s.button}> MIDDLE </button>\r\n                <button onClick={() => {arrangeHobbies (\"low\")}} className={s.button}> LOW </button>\r\n                <button onClick={() => {arrangeHobbies (\"all\")}} className={s.button}> ALL </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hobbies;","import React, {useState, ChangeEvent, KeyboardEvent} from 'react';\r\nimport {DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./MyInput.module.css\"\r\n\r\nexport type InputNyaPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n    & { addItem?: (value: string) => void, autoFocus?: boolean, onBlur?: () => void, value: string, onChangeTitle?: (value: string) => void, };\r\n\r\nconst MyInput = (props: InputNyaPropsType, {...restProps}) => {\r\n\r\n    let [title, setTitle] = useState<any>(props.value);\r\n    let [error, setError] = useState<null | string>(null);\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError(\"\");\r\n        setTitle(e.currentTarget.value)\r\n        props.onChangeTitle && props.onChangeTitle(e.currentTarget.value)\r\n    };\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            addItem()\r\n        }\r\n    };\r\n    const addItem = () => {\r\n        if (title.trim() !== \"\" && props.addItem) {\r\n            props.addItem(title);\r\n            setTitle(\"\")\r\n        } else {\r\n            setError(\"Title is required\")\r\n            setTitle(\"\")\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n            <div className={s.container}>\r\n                <input className={!error ? s.input : s.inputError}\r\n                       onKeyPress={onKeyPressHandler}\r\n                       onChange={onChangeHandler}\r\n                       autoFocus={props.autoFocus}\r\n                       onBlur={props.onBlur}\r\n                       value={title}\r\n                       {...restProps}\r\n                />\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default MyInput","import React, {useState, ChangeEvent, KeyboardEvent, ButtonHTMLAttributes} from 'react';\r\nimport {DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./MyButton.module.css\"\r\nexport type ButtonNyaPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n    & {isStandard?: boolean, value: string, onClick: () => void };\r\n\r\nconst MyButton = (props: ButtonNyaPropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={props.onClick} className={!props.isStandard? s.buttonRed : s.button}>{!props.isStandard? \"x\" : props.value}</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyButton","import React, {useState, ChangeEvent, KeyboardEvent, ButtonHTMLAttributes} from 'react';\r\nimport {DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./MyCheckbox.module.css\"\r\n\r\nexport type CheckboxPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n    & { id: string, label: string};\r\n\r\n\r\nconst MyCheckbox: React.FC<CheckboxPropsType> = ({id, label, ...restProps}) => {\r\n\r\n    return (\r\n        <div>\r\n            <input type={\"checkbox\"} name={id} id={id} className={s.cssCheckbox} {...restProps}/>\r\n            <label htmlFor={id} className={s.cssLabel}> { label } </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyCheckbox","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport MyInput from \"./common/myInput/MyInput\";\r\nimport MyButton from \"./common/myButton/MyButton\";\r\nimport s from \"./MyComponents.module.css\";\r\nimport {v1} from \"uuid\";\r\nimport MyCheckbox from \"./common/myCheckbox/MyCheckbox\";\r\n\r\nconst MyComponents = () => {\r\n    let [names, setNames] = useState<Array<{ id: string, name: string }>>([])\r\n    let [name, setName] = useState< string >(\"\")\r\n\r\n\r\n    const addName = (nameValue: string) => {\r\n        alert(`Hello ${nameValue}`)\r\n        let newName = {id: v1(), name: nameValue}\r\n        let newNames = [...names, newName]\r\n        setNames(newNames);\r\n        setName('');\r\n    }\r\n    const buttonClick = () => {\r\n        if (name.trim()) {\r\n            alert(`Hello ${name}`)\r\n            let newName = {id: v1(), name: name}\r\n            setNames([...names, newName]);\r\n            setName(\"\")\r\n        } else {\r\n            alert(\"Please enter the name\")\r\n        }\r\n    }\r\n    const setNameInput = (title: string) => {\r\n        setName(title)\r\n    }\r\n\r\ndebugger\r\n    return (\r\n        <div className={s.inputContainer}>\r\n            <MyInput  addItem={addName} onChangeTitle={setNameInput} value={name}/>\r\n            <MyButton onClick={buttonClick} value={\"Add\"} isStandard={true}/>\r\n            <MyCheckbox id={\"1\"} label={\"\"}/>\r\n            <span className={s.span}> {`Total amount of names is ${names.length}`} </span>\r\n        </div>\r\n    )\r\n}\r\nexport default MyComponents","import React from 'react';\nimport Post from \"./post/Post\";\nimport Hobbies from \"./hobbies/Hobbies\";\nimport MyComponents from \"./MyComponents\";\n\ntype propsType = {\n    hobbies: Array<{ id: number, n: string, p: string }>\n}\n\nfunction PreJunior(props: propsType) {\n    return (\n        <div>\n            <Post postName={'Arsen Vaskanian'} postMessage={'npm start нажимал?'} postTime={'22:00'}/>\n            <Hobbies mydata={props.hobbies}/>\n            <MyComponents/>\n        </div>\n    );\n}\n\nexport default PreJunior;","import React from 'react';\n\nfunction JuniorPlus() {\n\n    return (\n        <div>\n********************************* JuniorPlus ******************************\n        </div>\n    );\n}\n\nexport default JuniorPlus;","import React, {ChangeEvent, useState} from 'react';\r\nimport s from \"./MyEditableSpan.module.css\"\r\nimport MyInput from \"../myInput/MyInput\";\r\n\r\n\r\ntype MyEditableSpanType = {\r\n    spanTitle: string\r\n    onChange: (spanTitle: string) => void\r\n}\r\n\r\n\r\nconst MyEditableSpan = (props: MyEditableSpanType) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const onBlur = () => {\r\n        setEditMode(false);\r\n    }\r\n    const addItem = (newValue: string) => {\r\n        props.onChange (newValue)\r\n        setEditMode(false)\r\n    }\r\n    return (\r\n        <div>\r\n            {editMode\r\n            ? <MyInput autoFocus={true} value={props.spanTitle} onBlur={onBlur} addItem={addItem}/>\r\n            : <div className={s.container}><span onDoubleClick={() => setEditMode(true)}> {props.spanTitle} </span></div>}\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default MyEditableSpan","import React, {ChangeEvent, useState} from 'react';\r\nimport s from \"./MySelect.module.css\"\r\n\r\ntype MySelectType = {\r\n    options: Array<{ value: string, checked: boolean }>\r\n    value: number\r\n    onChange?: (e: ChangeEvent<HTMLSelectElement>) => void\r\n}\r\n\r\n\r\nconst MySelect = (props: MySelectType) => {\r\n\r\n    return (\r\n        <div className={s.container} >\r\n            <select className={s.select} onChange={props.onChange}>\r\n                {props.options.map((option, index) => {\r\n                    if (props.value === index+1) {\r\n                        return <option className={s.option} selected={true} key={index+1}>{option.value}</option>\r\n                    }\r\n                    return <option className={s.option} >{option.value}</option>\r\n                })}\r\n            </select>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MySelect","import React, {ChangeEvent, useState} from 'react';\r\nimport s from \"./MyRadio.module.css\"\r\n\r\ntype MySelectType = {\r\n    options: Array<{ value: string, checked: boolean }>\r\n    value?: number\r\n    name?: string\r\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\n\r\nconst MyRadio = (props: MySelectType) => {\r\n    return (\r\n        <div className={s.container}>\r\n            {props.options.map(radio => {\r\n                return (\r\n                    <div>\r\n                        <label>\r\n                            <input type={\"radio\"}\r\n                                   id={radio.value}\r\n                                   value={radio.value}\r\n                                   name={props.name}\r\n                                   checked={radio.checked}\r\n                                   onChange={props.onChange}/>\r\n                            {radio.value}\r\n                        </label>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MyRadio","import React, {ChangeEvent, useState} from 'react';\nimport MyEditableSpan from \"./common/myEditableSpan/MyEditableSpan\";\nimport MySelect from \"./common/mySelect/MySelect\";\nimport MyRadio from \"./common/myRadio/MyRadio\";\n\nfunction Junior() {\n\n    const optionsArray = [\n        {value: \"React\", checked: false},\n        {value: \"Redux\", checked: false},\n        {value: \"Poker\", checked: false},\n        {value: \"Chess\", checked: false},\n    ]\n    const [radioValues, setRadioValues] = useState(optionsArray)\n    const onRadioChange = (e: ChangeEvent<HTMLInputElement>) => {\n        let newValue = e.currentTarget.value\n        let stateCopy = [...radioValues];\n        let newRadioValues = stateCopy.map((radio) => {\n            if (radio.value === newValue) {\n                return {...radio, checked: true}\n            } else {\n                return {...radio, checked: false}\n            }\n        })\n        setRadioValues(newRadioValues)\n    }\n\n    const onSelectChange = (e: ChangeEvent<HTMLSelectElement>) => {\n        let newValue = e.currentTarget.value\n        alert (newValue)\n    }\n\n    const [spanTitle, setSpanTitle] = useState(\"Change me\")\n\n    return (\n        <div>\n            <p style={{color: \"white\", textAlign: \"center\", fontSize: \"1.5em\"}}>\n                <strong>Double click</strong> on text will make it editable. Press <strong>enter</strong> to save changes</p>\n            <MyEditableSpan spanTitle={spanTitle} onChange={setSpanTitle}/>\n            <MySelect options={optionsArray} value={2} onChange={onSelectChange}/>\n            <MyRadio options={radioValues} onChange={onRadioChange}/>\n        </div>\n    );\n}\n\nexport default Junior;","import React from 'react';\nimport './App.css';\nimport {HashRouter, NavLink, Route} from \"react-router-dom\";\nimport PreJunior from \"./PreJunior\";\nimport JuniorPlus from \"./JuniorPlus\";\nimport Junior from \"./Junior\";\n\ntype propsType = {\n    hobbies: Array<{ id: number, n: string, p: string }>\n}\nconst App = (props:propsType) => {\n\n\n    return (\n        <HashRouter>\n        <div>\n            <nav className={\"navbar\"}>\n                <NavLink to={\"/PreJunior\"} className={\"menuItem\"} activeClassName={\"active\"}> PreJunior </NavLink>\n                <NavLink to={\"/Junior\"} className={\"menuItem\"} activeClassName={\"active\"}> Junior </NavLink>\n                <NavLink to={\"/JuniorPlus\"} className={\"menuItem\"} activeClassName={\"active\"}> JuniorPlus </NavLink>\n            </nav>\n            <Route path='/PreJunior' render={() => <PreJunior hobbies={props.hobbies}/>}/>\n            <Route path='/Junior' render={() => <Junior />}/>\n            <Route path='/JuniorPlus' render={() => <JuniorPlus />}/>\n        </div>\n        </HashRouter>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let myData = [\r\n        {id: 1, n: \"семья\", p: \"high\"},\r\n        {id: 2, n: \"работа\", p: \"middle\"},\r\n        {id: 3, n: \"игры\", p: \"low\"},\r\n        {id: 4, n: \"бег\", p: \"middle\"},\r\n        {id: 5, n: \"шахматы\", p: \"middle\"},\r\n        {id: 6, n: \"путешествия\", p: \"middle\"},\r\n        {id: 7, n: \"друзья\", p: \"low\"},\r\n    ]\r\n\r\nexport default myData","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport myData from './state';\n\n\nReactDOM.render(<App hobbies = {myData}/>,  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}